var tipuesearch = {"pages": [{'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數. \n', 'tags': '', 'url': 'Develop.html'}, {'title': '可攜系統', 'text': '\n', 'tags': '', 'url': '可攜系統.html'}, {'title': 'Crouse notes', 'text': '', 'tags': '', 'url': 'Crouse notes.html'}, {'title': 'w7', 'text': '檢視個人網站及分組網站的h1命名、相關URL連結、網頁標題: \n \n h1的命名須一目了然，且將裡面內容分類好 \n 將分組倉儲、組員倉儲的連結附上，供別人方便連結 \n 網頁標題改至此課程名稱 \n \n 抽點學員檢驗YouTube直播 + OBS串流: \n \n 配合疫情情況不穩定檢驗各學員是否會利用網路來做相關遠距上課設定 \n 檢視課程及直播所需設備是否準備齊全 \n \n 說明期末專案內容: \n \n 說明專案所需的相關內容(Ex 繪製零件、遠端控制......) \n 說明控制車子移動所需要的硬體及程式 \n 呈現CoppeliaSim RemoteApi的應用 \n \n', 'tags': '', 'url': 'w7.html'}, {'title': 'w8', 'text': '說明網際化之應用: \n \n 說明四輪車專案相關模組(Ex numpy、opencv、imutils)的安裝及應用 \n \n \n \n \n \n \n \n 1 \n 2 \n 3 \n \n \n \n pip install opencv - python \n \xa0 \n pip install imutils \n \n \n \n \n \n \n \n \n 展示利用攝像頭及opencv做遠端的監控 \n 說明利用Leo editor相關程式語法 \n 說明利用authomatic讓使用者需要登入設定的信箱規格才能查看內容 \n \n 抽點學員檢驗YouTube直播 + OBS串流: \n \n 配合疫情情況不穩定檢驗各學員是否會利用網路來做相關遠距上課設定 \n 檢視課程及直播所需設備是否準備齊全 \n \n', 'tags': '', 'url': 'w8.html'}, {'title': 'w9', 'text': '期中考週: \n \n 利用個人行事曆建立 Google Handout Meet，並利用meet錄製個人w1~w8內容 \n 填寫表單提送期中簡報URL和自評分數 \n \n 說明w9~w18任務 \n \n 利用Onshape繪製四輪車零件 \n 零組件轉檔至CoppeliaSim \n 轉入至CoppeliaSim之零組件檔案分割及零件從屬關係配置 \n 利用Python Remote Api進行四輪車控制 \n Remote Api配合Flask、Oauth2使四輪車在網際控制 \n 利用虛擬主機配合Ubuntu20.04進行網際控制 \n 整合上述6項完成此課程專案 \n \n 說明虛擬主機網路設定: \n \n NAT:僅提供網路連線，無法做其他功能 \n Bridged:能模擬一台實體主機，和實體主機相同位階 \n host only:僅能和實體主機進行通訊，沒有實際網路功能 \n \n', 'tags': '', 'url': 'w9.html'}, {'title': 'w10', 'text': '說明Oauth2應用: \n \n 講解配合Google Api + Oauth2的應用及優點 \n 說明如何利用Google Api建立相關憑證 \n \n 說明四輪車可配合網際化之應用: \n \n 利用HTML form來搭配不同之四輪車展示(ex.下拉式選單) \n 配合csv模組將獲取的相關資料放入資料庫 \n \n 簡述Leo Editor開發人員歷程及運作團隊 \n', 'tags': '', 'url': 'w10.html'}]};